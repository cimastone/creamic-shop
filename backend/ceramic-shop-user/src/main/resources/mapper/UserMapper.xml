<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ceramic.user.infrastructure.persistence.mapper.UserMapper">
    
    <resultMap id="BaseResultMap" type="com.ceramic.user.infrastructure.persistence.entity.UserDO">
        <id column="id" property="id" />
        <result column="username" property="username" />
        <result column="password" property="password" />
        <result column="name" property="nickname" />
        <result column="email" property="email" />
        <result column="phone" property="phone" />
        <result column="avatar" property="avatar" />
        <result column="gender" property="gender" />
        <result column="status" property="status" />
        <result column="last_login_time" property="lastLoginTime" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    
    <sql id="Base_Column_List">
        id, username, password, name, email, phone, avatar, gender, status, last_login_time, create_time, update_time
    </sql>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_user (
            username, password, name, email, phone, avatar, gender, status, 
            last_login_time, create_time, update_time
        ) VALUES (
            #{username}, #{password}, #{nickname}, #{email}, #{phone}, #{avatar}, #{gender}, #{status}, 
            #{lastLoginTime}, #{createTime}, #{updateTime}
        )
    </insert>
    
    <update id="update">
        UPDATE t_user
        <set>
            <if test="password != null">password = #{password},</if>
            <if test="nickname != null">name = #{nickname},</if>
            <if test="email != null">email = #{email},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="avatar != null">avatar = #{avatar},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="status != null">status = #{status},</if>
            <if test="lastLoginTime != null">last_login_time = #{lastLoginTime},</if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>
    
    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM t_user
        WHERE id = #{id}
    </select>
    
    <select id="selectByUsername" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM t_user
        WHERE username = #{username}
    </select>
    
    <select id="selectByEmail" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM t_user
        WHERE email = #{email}
    </select>
    
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM t_user
        ORDER BY id
    </select>
    
    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List" />
        FROM t_user
        ORDER BY id
        LIMIT #{offset}, #{limit}
    </select>
    
    <select id="count" resultType="long">
        SELECT COUNT(1) FROM t_user
    </select>
    
    <delete id="deleteById">
        DELETE FROM t_user WHERE id = #{id}
    </delete>
    
    <select id="countByUsername" resultType="int">
        SELECT COUNT(1) FROM t_user WHERE username = #{username}
    </select>
    
    <select id="countByEmail" resultType="int">
        SELECT COUNT(1) FROM t_user WHERE email = #{email}
    </select>
</mapper> 